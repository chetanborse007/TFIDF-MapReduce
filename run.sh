# Create new input directory on HDFS and copy input files from local
# filesystem to HDFS filesystem.
hadoop fs -mkdir -p input/SearchEngine
hadoop fs -put input/* input/SearchEngine


# Create new output directories on HDFS and delete existing output 
# directories generated by previous execution instance of 
# MapReduce application.
hadoop fs -mkdir -p output/SearchEngine/DocWordCount
hadoop fs -mkdir -p output/SearchEngine/TermFrequency
hadoop fs -mkdir -p output/SearchEngine/TFIDF
hadoop fs -mkdir -p output/SearchEngine/SearchResult
hadoop fs -mkdir -p output/SearchEngine/Rank
hadoop fs -rm -r output/SearchEngine/DocWordCount
hadoop fs -rm -r output/SearchEngine/TermFrequency
hadoop fs -rm -r output/SearchEngine/TFIDF
hadoop fs -rm -r output/SearchEngine/SearchResult
hadoop fs -rm -r output/SearchEngine/Rank


# Compile source code and create a jar file.
javac -cp /usr/lib/hadoop/*:/usr/lib/hadoop-mapreduce/*:/usr/lib/hadoop-0.20-mapreduce/* src/org/myorg/search/*.java -d bin -Xlint
jar -cvf SearchEngine.jar -C bin/ .


# Run MapReduce application on HDFS.
hadoop jar SearchEngine.jar org.myorg.search.DocWordCount input/SearchEngine output/SearchEngine/DocWordCount
hadoop jar SearchEngine.jar org.myorg.search.TermFrequency input/SearchEngine output/SearchEngine/TermFrequency
hadoop jar SearchEngine.jar org.myorg.search.TFIDF input/SearchEngine output/SearchEngine/TFIDF
#hadoop jar SearchEngine.jar org.myorg.search.Search "hadoop yellow hadoop" output/SearchEngine/TFIDF output/SearchEngine/SearchResult
hadoop jar SearchEngine.jar org.myorg.search.Search "Caucus-Race Alice Love Crocodile" output/SearchEngine/TFIDF output/SearchEngine/SearchResult
hadoop jar SearchEngine.jar org.myorg.search.Rank output/SearchEngine/SearchResult output/SearchEngine/Rank

